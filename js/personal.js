// source: proto/personal.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.person.Personal');
goog.provide('proto.person.Personal.Address');
goog.provide('proto.person.Personal.Education');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');
goog.require('proto.date.Date');

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.person.Personal = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.person.Personal.repeatedFields_, null);
};
goog.inherits(proto.person.Personal, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.person.Personal.displayName = 'proto.person.Personal';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.person.Personal.Address = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.person.Personal.Address, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.person.Personal.Address.displayName = 'proto.person.Personal.Address';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.person.Personal.repeatedFields_ = [4,12];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.person.Personal.prototype.toObject = function(opt_includeInstance) {
  return proto.person.Personal.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.person.Personal} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.person.Personal.toObject = function(includeInstance, msg) {
  var f, obj = {
    firstName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    secondName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    linkedinProfile: jspb.Message.getFieldWithDefault(msg, 3, ""),
    phoneNumbersList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
    personalWebsiteLink: jspb.Message.getFieldWithDefault(msg, 5, ""),
    githubLink: jspb.Message.getFieldWithDefault(msg, 6, ""),
    headerFinished: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
    profilePicture: msg.getProfilePicture_asB64(),
    pageNumber: jspb.Message.getFieldWithDefault(msg, 9, 0),
    educationLevel: jspb.Message.getFieldWithDefault(msg, 10, 0),
    graduationDay: (f = msg.getGraduationDay()) && proto.date.Date.toObject(includeInstance, f),
    addressesList: jspb.Message.toObjectList(msg.getAddressesList(),
    proto.person.Personal.Address.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.person.Personal}
 */
proto.person.Personal.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.person.Personal;
  return proto.person.Personal.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.person.Personal} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.person.Personal}
 */
proto.person.Personal.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFirstName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSecondName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setLinkedinProfile(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addPhoneNumbers(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPersonalWebsiteLink(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setGithubLink(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setHeaderFinished(value);
      break;
    case 8:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setProfilePicture(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPageNumber(value);
      break;
    case 10:
      var value = /** @type {!proto.person.Personal.Education} */ (reader.readEnum());
      msg.setEducationLevel(value);
      break;
    case 11:
      var value = new proto.date.Date;
      reader.readMessage(value,proto.date.Date.deserializeBinaryFromReader);
      msg.setGraduationDay(value);
      break;
    case 12:
      var value = new proto.person.Personal.Address;
      reader.readMessage(value,proto.person.Personal.Address.deserializeBinaryFromReader);
      msg.addAddresses(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.person.Personal.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.person.Personal.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.person.Personal} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.person.Personal.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFirstName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSecondName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getLinkedinProfile();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPhoneNumbersList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
  f = message.getPersonalWebsiteLink();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getGithubLink();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getHeaderFinished();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getProfilePicture_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      8,
      f
    );
  }
  f = message.getPageNumber();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = message.getEducationLevel();
  if (f !== 0.0) {
    writer.writeEnum(
      10,
      f
    );
  }
  f = message.getGraduationDay();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.date.Date.serializeBinaryToWriter
    );
  }
  f = message.getAddressesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      12,
      f,
      proto.person.Personal.Address.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.person.Personal.Education = {
  DEFAULT: 0,
  DIPLOMA: 1,
  BACHELORS: 2
};




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.person.Personal.Address.prototype.toObject = function(opt_includeInstance) {
  return proto.person.Personal.Address.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.person.Personal.Address} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.person.Personal.Address.toObject = function(includeInstance, msg) {
  var f, obj = {
    addressOne: jspb.Message.getFieldWithDefault(msg, 1, ""),
    addressTwo: jspb.Message.getFieldWithDefault(msg, 2, ""),
    postalCode: jspb.Message.getFieldWithDefault(msg, 3, ""),
    prefectureName: jspb.Message.getFieldWithDefault(msg, 4, ""),
    ward: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.person.Personal.Address}
 */
proto.person.Personal.Address.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.person.Personal.Address;
  return proto.person.Personal.Address.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.person.Personal.Address} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.person.Personal.Address}
 */
proto.person.Personal.Address.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddressOne(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddressTwo(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPostalCode(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPrefectureName(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setWard(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.person.Personal.Address.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.person.Personal.Address.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.person.Personal.Address} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.person.Personal.Address.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddressOne();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAddressTwo();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPostalCode();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPrefectureName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getWard();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string address_one = 1;
 * @return {string}
 */
proto.person.Personal.Address.prototype.getAddressOne = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.person.Personal.Address} returns this
 */
proto.person.Personal.Address.prototype.setAddressOne = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string address_two = 2;
 * @return {string}
 */
proto.person.Personal.Address.prototype.getAddressTwo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.person.Personal.Address} returns this
 */
proto.person.Personal.Address.prototype.setAddressTwo = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string postal_code = 3;
 * @return {string}
 */
proto.person.Personal.Address.prototype.getPostalCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.person.Personal.Address} returns this
 */
proto.person.Personal.Address.prototype.setPostalCode = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string prefecture_name = 4;
 * @return {string}
 */
proto.person.Personal.Address.prototype.getPrefectureName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.person.Personal.Address} returns this
 */
proto.person.Personal.Address.prototype.setPrefectureName = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string ward = 5;
 * @return {string}
 */
proto.person.Personal.Address.prototype.getWard = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.person.Personal.Address} returns this
 */
proto.person.Personal.Address.prototype.setWard = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string first_name = 1;
 * @return {string}
 */
proto.person.Personal.prototype.getFirstName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.person.Personal} returns this
 */
proto.person.Personal.prototype.setFirstName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string second_name = 2;
 * @return {string}
 */
proto.person.Personal.prototype.getSecondName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.person.Personal} returns this
 */
proto.person.Personal.prototype.setSecondName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string linkedin_profile = 3;
 * @return {string}
 */
proto.person.Personal.prototype.getLinkedinProfile = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.person.Personal} returns this
 */
proto.person.Personal.prototype.setLinkedinProfile = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated string phone_numbers = 4;
 * @return {!Array<string>}
 */
proto.person.Personal.prototype.getPhoneNumbersList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.person.Personal} returns this
 */
proto.person.Personal.prototype.setPhoneNumbersList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.person.Personal} returns this
 */
proto.person.Personal.prototype.addPhoneNumbers = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.person.Personal} returns this
 */
proto.person.Personal.prototype.clearPhoneNumbersList = function() {
  return this.setPhoneNumbersList([]);
};


/**
 * optional string personal_website_link = 5;
 * @return {string}
 */
proto.person.Personal.prototype.getPersonalWebsiteLink = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.person.Personal} returns this
 */
proto.person.Personal.prototype.setPersonalWebsiteLink = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string github_link = 6;
 * @return {string}
 */
proto.person.Personal.prototype.getGithubLink = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.person.Personal} returns this
 */
proto.person.Personal.prototype.setGithubLink = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional bool header_finished = 7;
 * @return {boolean}
 */
proto.person.Personal.prototype.getHeaderFinished = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.person.Personal} returns this
 */
proto.person.Personal.prototype.setHeaderFinished = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional bytes profile_picture = 8;
 * @return {string}
 */
proto.person.Personal.prototype.getProfilePicture = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * optional bytes profile_picture = 8;
 * This is a type-conversion wrapper around `getProfilePicture()`
 * @return {string}
 */
proto.person.Personal.prototype.getProfilePicture_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getProfilePicture()));
};


/**
 * optional bytes profile_picture = 8;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getProfilePicture()`
 * @return {!Uint8Array}
 */
proto.person.Personal.prototype.getProfilePicture_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getProfilePicture()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.person.Personal} returns this
 */
proto.person.Personal.prototype.setProfilePicture = function(value) {
  return jspb.Message.setProto3BytesField(this, 8, value);
};


/**
 * optional int32 page_number = 9;
 * @return {number}
 */
proto.person.Personal.prototype.getPageNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.person.Personal} returns this
 */
proto.person.Personal.prototype.setPageNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional Education education_level = 10;
 * @return {!proto.person.Personal.Education}
 */
proto.person.Personal.prototype.getEducationLevel = function() {
  return /** @type {!proto.person.Personal.Education} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {!proto.person.Personal.Education} value
 * @return {!proto.person.Personal} returns this
 */
proto.person.Personal.prototype.setEducationLevel = function(value) {
  return jspb.Message.setProto3EnumField(this, 10, value);
};


/**
 * optional date.Date graduation_day = 11;
 * @return {?proto.date.Date}
 */
proto.person.Personal.prototype.getGraduationDay = function() {
  return /** @type{?proto.date.Date} */ (
    jspb.Message.getWrapperField(this, proto.date.Date, 11));
};


/**
 * @param {?proto.date.Date|undefined} value
 * @return {!proto.person.Personal} returns this
*/
proto.person.Personal.prototype.setGraduationDay = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.person.Personal} returns this
 */
proto.person.Personal.prototype.clearGraduationDay = function() {
  return this.setGraduationDay(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.person.Personal.prototype.hasGraduationDay = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * repeated Address addresses = 12;
 * @return {!Array<!proto.person.Personal.Address>}
 */
proto.person.Personal.prototype.getAddressesList = function() {
  return /** @type{!Array<!proto.person.Personal.Address>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.person.Personal.Address, 12));
};


/**
 * @param {!Array<!proto.person.Personal.Address>} value
 * @return {!proto.person.Personal} returns this
*/
proto.person.Personal.prototype.setAddressesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 12, value);
};


/**
 * @param {!proto.person.Personal.Address=} opt_value
 * @param {number=} opt_index
 * @return {!proto.person.Personal.Address}
 */
proto.person.Personal.prototype.addAddresses = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 12, opt_value, proto.person.Personal.Address, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.person.Personal} returns this
 */
proto.person.Personal.prototype.clearAddressesList = function() {
  return this.setAddressesList([]);
};


